#include<iostream>
using namespace std;
struct node{
    int data;
    node* next;
};
class Linked{
    node* head;
    public:
    Linked(){
        head=nullptr;
    }
    void create(int val){
        node* newnode=new node();
        newnode->data=val;
        newnode->next=nullptr;
        if(head==nullptr){
            head=newnode;
        }else{
            node* temp=head;
            while(temp->next!=nullptr){
                temp=temp->next;
            }
            temp->next=newnode;
        }
    }
    void deletenode(int val){
        if(head->data==val){
            node* temp=head;
            temp=temp->next;
            delete head;
            head=temp;
            return;
        }
        node* temp=head;
        while(temp->next!=NULL){
            if(temp->next->data==val) break;
            temp=temp->next;
        }
        node* del=temp->next;
        temp->next=temp->next->next;
        delete del;
        return;
    }
     void display(){
        if(head==NULL){
            cout<<"List is empty.";
            return;
        }
        node* temp=head;
        while (temp != nullptr) {
            cout << temp->data << " -> ";
            temp = temp->next;
        }
        cout << "NULL" << endl;
    }
};
int main(){
    int size;
    Linked ll;
    int n;
    cout<<"Enter number of nodes:\n";
    cin>>size;
    cout<<"Enter the nodes;\n";
    for(int i=0;i<size;i++){
        cin>>n;
        ll.create(n);
    }
    int key;
    cout<<"Enter key to delete:\n";
    cin>>key;
    cout<<"Original:\n";
    ll.display();
    ll.deletenode(key);
    cout<<"Updated:\n";
    ll.display();
}
