#include<iostream>
using namespace std;
struct node{
    int data;
    node* next;
};
class stack{
    node* top;
    int size;
    public:
    stack(){
        top=nullptr;
        size=0;
    }
    void push(int n){
        node* newnode=new node();
        newnode->data=n;
        newnode->next=top;
        top=newnode;
        size++;
    }
    void pop(){
        if(top==nullptr){
            cout<<"Underflow\n"<<endl;
            return;
        }
        node* temp=new node;
        temp=top;
        top=top->next;
        cout<<temp->data<<" deleted"<<endl;
        delete temp;
        size--;
    }
    int peek(){
        if(top==nullptr){
            cout<<"Stack empty nothing to peek\n";
            return -1;
        }else{
            return top->data;
        }
    }
    int Size(){
        return size;
    }
    void display(){
        if(top==nullptr){
            cout<<"NULL"<<endl;
        }else{
            node* temp=top;
            while(temp!=nullptr){
                cout<<temp->data<<" ";
                temp=temp->next;
            }
            cout<<endl;
        }
    }
};
int main(){
    stack st;
    st.push(10);
    st.push(20);
    st.push(30);
    st.display();
    st.pop();
    st.pop();
    cout<<"Top element is: "<<st.peek()<<endl;
    st.display();
    st.pop();
    cout<<"Size is: "<<st.Size()<<endl;
}
